@page "/ScootersList"
@layout MainLayout

@using Microsoft.EntityFrameworkCore
@using PayNowBlazor.Components.Layout
@using PayNowBlazor.Infrastructure
@using PayNowBlazor.Infrastructure.Entities

<RadzenButton ButtonStyle="ButtonStyle.Success" Icon="add_circle_outline" Text="Add new scooter" Click="@InsertRow"/>
<RadzenDataGrid @ref="ScootersGrid" AllowFiltering="true" AllowColumnResize="true" AllowAlternatingRows="false" FilterMode="FilterMode.Advanced"
		AllowSorting="true" PageSize="10" AllowPaging="true" ShowPagingSummary="true" EditMode="DataGridEditMode.Single"
		Data="@Scooters" ColumnWidth="100px" LogicalFilterOperator="LogicalFilterOperator.Or" 
		SelectionMode="DataGridSelectionMode.Single">
	<Columns>
		<RadzenDataGridColumn Property="@nameof(Scooter.Id)" Title="ID" Frozen="true" TextAlign="TextAlign.Center"/>
		<RadzenDataGridColumn Property="@nameof(Scooter.Manufacturer)" Title="Manufacturer" TextAlign="TextAlign.Center">
			<EditTemplate Context="scooter">
				<RadzenTextBox @bind-value="scooter.Manufacturer"/>
			</EditTemplate>
		</RadzenDataGridColumn>
		<RadzenDataGridColumn Property="@nameof(Scooter.Model)" Title="Model" TextAlign="TextAlign.Center">
			<EditTemplate Context="scooter">
				<RadzenTextBox @bind-value="scooter.Model"/>
			</EditTemplate>
		</RadzenDataGridColumn>
		<RadzenDataGridColumn Context="scooter" FrozenPosition="FrozenColumnPosition.Right">
			<Template Context="scooter">
				<RadzenButton Icon="edit" ButtonStyle="ButtonStyle.Light" Variant="Variant.Flat" Size="ButtonSize.Medium" 
						Click="@(_ => EditRow(scooter))"/>
				<RadzenButton Icon="delete" ButtonStyle="ButtonStyle.Danger" Variant="Variant.Flat" Shade="Shade.Lighter" 
						Size="ButtonSize.Medium" class="my-1 ms-1" Click="@(_ => DeleteRow(scooter))"/>
			</Template>
			<EditTemplate Context="scooter">
				<RadzenButton Icon="check" ButtonStyle="ButtonStyle.Success" Variant="Variant.Flat" Size="ButtonSize.Medium" 
						Click="@(_ => SaveRow(scooter))" aria-label="Save"/>
				<RadzenButton Icon="close" ButtonStyle="ButtonStyle.Light" Variant="Variant.Flat" Size="ButtonSize.Medium" 
						class="my-1 ms-1" Click="@(_ => CancelEdit(scooter))" aria-label="Cancel"/>
			</EditTemplate>
		</RadzenDataGridColumn>
	</Columns>
</RadzenDataGrid>

@code {

	[Inject]
	public DatabaseContext DbContext { get; set; } = null!;

	public RadzenDataGrid<Scooter> ScootersGrid { get; set; }

	public DbSet<Scooter> Scooters => DbContext.Scooters;

	public async Task InsertRow()
	{
		await ScootersGrid.InsertRow(new());
	}

	public async Task EditRow(Scooter scooter)
	{
		await ScootersGrid.EditRow(scooter);
	}

	public async Task CancelEdit(Scooter scooter)
	{
		ScootersGrid.CancelEditRow(scooter);
	}

	public async Task DeleteRow(Scooter scooter)
	{
		if (Scooters.Contains(scooter))
		{
			Scooters.Remove(scooter);
			await DbContext.SaveChangesAsync();
		}
		ScootersGrid.CancelEditRow(scooter);
		await ScootersGrid.Reload();
	}

	public async Task SaveRow(Scooter scooter)
	{
		if (!Scooters.Contains(scooter))
		{
			DbContext.Add(scooter);
		}
		await DbContext.SaveChangesAsync();
		await ScootersGrid.UpdateRow(scooter);
	}
}